# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_windows
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
PCH = code/pch.hpp
PCH_PLACEHOLDER = $(OBJDIR)/$(notdir $(PCH))
GCH = $(PCH_PLACEHOLDER).gch
INCLUDES += -Icode -Icode/inc -Ideps/mini-yaml/yaml -Ideps/mINI/src/mini
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_windows)
TARGETDIR = bin/debug-windows-x86_64/needlemake
TARGET = $(TARGETDIR)/needlemake.exe
OBJDIR = obj/debug-windows-x86_64/needlemake
DEFINES += -DWINDOWS -DDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c17 -Wall -Werror -Wextra -pedantic -pedantic-errors -Wno-trigraphs -Wno-error=unused-variable -Wno-error=unused-parameter -Wno-error=missing-field-initializers -Wno-error=sign-compare -O0
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++20 -Wall -Werror -Wextra -pedantic -pedantic-errors -Wno-trigraphs -Wno-error=unused-variable -Wno-error=unused-parameter -Wno-error=missing-field-initializers -Wno-error=sign-compare -O0
LIBS += bin/debug-windows-x86_64/mini-yaml/mini-yaml.lib
LDDEPS += bin/debug-windows-x86_64/mini-yaml/mini-yaml.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release_windows)
TARGETDIR = bin/release-windows-x86_64/needlemake
TARGET = $(TARGETDIR)/needlemake.exe
OBJDIR = obj/release-windows-x86_64/needlemake
DEFINES += -DWINDOWS -DRELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c17 -Wall -Werror -Wextra -pedantic -pedantic-errors -Wno-trigraphs -Wno-error=unused-variable -Wno-error=unused-parameter -Wno-error=missing-field-initializers -Wno-error=sign-compare -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++20 -Wall -Werror -Wextra -pedantic -pedantic-errors -Wno-trigraphs -Wno-error=unused-variable -Wno-error=unused-parameter -Wno-error=missing-field-initializers -Wno-error=sign-compare -O2
LIBS += bin/release-windows-x86_64/mini-yaml/mini-yaml.lib
LDDEPS += bin/release-windows-x86_64/mini-yaml/mini-yaml.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),deploy_windows)
TARGETDIR = bin/deploy-windows-x86_64/needlemake
TARGET = $(TARGETDIR)/needlemake.exe
OBJDIR = obj/deploy-windows-x86_64/needlemake
DEFINES += -DWINDOWS -DDEPLOY
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -std=c17 -Wall -Werror -Wextra -pedantic -pedantic-errors -Wno-trigraphs -Wno-error=unused-variable -Wno-error=unused-parameter -Wno-error=missing-field-initializers -Wno-error=sign-compare -Ofast
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -std=c++20 -Wall -Werror -Wextra -pedantic -pedantic-errors -Wno-trigraphs -Wno-error=unused-variable -Wno-error=unused-parameter -Wno-error=missing-field-initializers -Wno-error=sign-compare -Ofast
LIBS += bin/deploy-windows-x86_64/mini-yaml/mini-yaml.lib
LDDEPS += bin/deploy-windows-x86_64/mini-yaml/mini-yaml.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/disk_unpacker.o
GENERATED += $(OBJDIR)/main.o
GENERATED += $(OBJDIR)/mod.o
GENERATED += $(OBJDIR)/package.o
GENERATED += $(OBJDIR)/project.o
OBJECTS += $(OBJDIR)/disk_unpacker.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/mod.o
OBJECTS += $(OBJDIR)/package.o
OBJECTS += $(OBJDIR)/project.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking needlemake
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning needlemake
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/main.o: code/main.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/disk_unpacker.o: code/src/disk_unpacker.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mod.o: code/src/mod.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/package.o: code/src/package.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/project.o: code/src/project.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif